<style lang="less">
  .location{
    width: 45rpx;
  }
  .picker{
    display: inline;
  }
</style>
<template>
  <view>
    <picker mode="region" bindchange="bindRegionChange" value="{{region}}" custom-item="{{customItem}}">
      <image class="location" mode="widthFix" src='../assets/location.png'/>
      <view class="picker">
       {{location.addressComponent.province}}，{{location.addressComponent.city}}，{{location.addressComponent.district}}
      </view>
    </picker>
    <text>{{location.formatted_address}}</text>
    <view wx:for="{{list}}" wx:key="{{index}}" @tap="goShop" data-id="{{item.id}}">
      <image src="{{item.img}}"/>
      <view>
        <text>{{item.name}}</text>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import {getShopList, transformCoords, transformRegion} from '../api/index.js';

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '悦读',
      enablePullDownRefresh: true,
      onReachBottomDistance: 50
    }
    components = {

    }

    // mixins = [testMixin]

    data = {
      all: [],
      current: 1,
      location: {}
    }

    computed = {
      now () {
        return +new Date()
      },
      list(){
        return this.all.slice(0, this.current*10);
      },
      region(){
        if (!this.location.addressComponent){
          return [];
        }
        return [this.location.addressComponent.province, this.location.addressComponent.city, this.location.addressComponent.district]
      }
    }

    watch = {
      list(value){
        console.log('value...', value);
      }
    }

    methods = {
      goShop(e){
        console.log('e...', e);
        wepy.navigateTo({
          url: 'Index/shop?id='+e.currentTarget.dataset.id
        })
      },bindRegionChange: (e)=>{
        console.log('picker发送选择改变，携带值为', e.detail.value)
        let location = {...this.location};
        location.addressComponent.province = e.detail.value[0];
        location.addressComponent.city = e.detail.value[1];
        location.addressComponent.district = e.detail.value[2];
        this.location = location;
      }
    }

    getLocation(){
      wepy.getLocation({
        type: 'wgs84',
        success: (res)=>{
          // console.log('res...', res);
          const latitude = res.latitude
          const longitude = res.longitude
          const speed = res.speed
          const accuracy = res.accuracy;

          transformCoords(latitude, longitude).then(res=>{
            transformRegion(res.data.result[0].y, res.data.result[0].x).then(res=>{
              // console.log('origin...', res);
              let location = res.data;
              location = location.slice(7, -1);
              // console.log(location);
              // console.log(JSON.parse(location));
              this.location = JSON.parse(location).result;
              this.$apply();
            })
          })
        }
      })
    }

    onPullDownRefresh(){
      console.log(123);
      this.fetchData(()=>{
        wepy.stopPullDownRefresh();
      })
    }

    onReachBottom(){
      this.current++;
    }

    fetchData(cb=()=>{}){
       getShopList().then(res=>{
        console.log('res...', res);
        this.all = res.data.data.list;
        this.$apply();
        cb && cb();
      })
    }

    onShow() {
      this.getLocation();
      this.fetchData();
    }
  }
</script>
